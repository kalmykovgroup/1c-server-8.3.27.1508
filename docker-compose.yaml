services:
  pgsql:
    build:
      context: ./pgsql
      args:
        - POSTGRES_VERSION=${POSTGRES_VERSION}
        - PG_DATA_DIR=${PG_DATA_DIR}
        - PG_CONF_DIR=${PG_CONF_DIR}
        - PG_BIN_DIR=${PG_BIN_DIR}     
      dockerfile: Dockerfile  
    container_name: pgsql
    restart: unless-stopped
    secrets:
      - postgres_password
    environment:
      - POSTGRES_VERSION=${POSTGRES_VERSION}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - PG_DATA_DIR=${PG_DATA_DIR}
      - PG_CONF_DIR=${PG_CONF_DIR} 
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - LANG=${LANG}
      - LC_ALL=${LC_ALL}
      - LANGUAGE=${LANGUAGE}
    networks:
      - internal_pgsql
    volumes:
      - pg-data-1c:${PG_DATA_DIR}  # üëà –î–∞–Ω–Ω—ã–µ –ë–î   
      - ./pgsql/logs:/var/lib/postgresql/16/main/log
  server:
    build:
      context: ./1c-server
      args:
        - ONEC_USER=${ONEC_USER}
        - ONEC_GROUP=${ONEC_GROUP}
        - LOG_DIR=${LOG_DIR}
        - BIN=${BIN}
        - DATA=${DATA}
        - CACHE=${CACHE}
        - LICENSES=${LICENSES}
        - HASP=${HASP}
        - PATH_TO_1C=${PATH_TO_1C}
        - WS_PUBLIC_DIR=${WS_PUBLIC_DIR}   
        - APACHE_PUBLICATION_CONF_DIR=${APACHE_PUBLICATION_CONF_DIR}   
      dockerfile: Dockerfile 
    container_name: server
    hostname: ${DOMAIN}  # üëà –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û
    depends_on:
      - pgsql
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER} 
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      VNC_PASSWORD_FILE: /run/secrets/vnc_server_pass
      ONEC_VERSION: ${ONEC_VERSION}   
      ONEC_PORT_RANGE: ${ONEC_PORT_RANGE}
      CLUSTER_PORT_RAGENT: ${CLUSTER_PORT_RAGENT} 
      DOMAIN: ${DOMAIN}
     # ./web-config: ${PATH_TO_1C}
      #- HOST_IP=host.docker.internal
    ports: 
      - "1540"  # ragent (—Ç–æ–Ω–∫–∏–µ –∫–ª–∏–µ–Ω—Ç—ã)
      - "1541"  # rmngr/rphost
      - "1545"  # ras (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ)
      - "1555"  # ras (–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥)  
      - "5901" #VNC
      - "${ONEC_PORT_RANGE_DOCKER}" # –†–∞–±–æ—á–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã (session)  
      - "80" # Apache –≤–Ω—É—Ç—Ä–∏ server —Ç–µ–ø–µ—Ä—å –æ—Ç–¥–∞—ë—Ç Web-–∫–ª–∏–µ–Ω—Ç
    volumes:
      - 1c-data:/var/lib/1c-server      # –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∞—Å—Ç–µ—Ä–∞ 
      - ./1c-server/logs/:${LOG_DIR}/      # –õ–æ–≥–∏ 
      - ./1c-server/logs/apache2:${APACHE_LOG}      # –õ–æ–≥–∏ apache2
      - ./1c-server/licenses/:${LICENSES}/       
      - 1c-user-home:/home/${ONEC_USER}/.1cv8/ 
      - ./.env:/env/.env:ro  
      - ./1c-server/web-config/publication:${APACHE_PUBLICATION_CONF_DIR} 
      - ./1c-server/web-config/vrd:/var/www/ws 
    networks:
       vnc-net:  # –î–ª—è VNC
       internal_pgsql:  # –î–ª—è —Å–≤—è–∑–∏ —Å PostgreSQL 
       private:    # –î–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞ (nginx, ping, telnet)
         aliases:
           - ${DOMAIN}  # –î–æ–º–µ–Ω–Ω–æ–µ –∏–º—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤–Ω—É—Ç—Ä–∏ —Å–µ—Ç–∏ 
    restart: unless-stopped
    secrets:
      - postgres_password
      - vnc_server_pass
      
  haspd:  # –ú—ç–Ω–µ–¥–∂–µ—Ä –ª–∏—Ü–µ–Ω–∑–∏–π HASP
    build:
      context: ./haspd
      args:
        - LOG_DIR=/var/log/haspd/
        - BIN=${BIN}
    container_name: haspd
    hostname: ${DOMAIN}
    ports:
      - "5901" #VNC
    volumes:
      - ./haspd/logs/:/var/log/haspd/
      - hasplm-data:/var/hasplm
      - ./haspd/config/hasplm.ini:/etc/hasplm/hasplm.ini
    environment:
      VNC_PASSWORD_FILE: /run/secrets/vnc_haspd_pass   
    networks:
      vnc-net:  
    restart: unless-stopped
    secrets:
      - vnc_haspd_pass
      
  novnc-server:
    build:
      context: ./novnc-proxy
    container_name: novnc-server
    environment:
      - VNC_TARGET=server:5901
    networks:
      - vnc-net

  novnc-haspd:
    build:
      context: ./novnc-proxy
    container_name: novnc-haspd  
    environment:
      - VNC_TARGET=haspd:5901
    networks:
      - vnc-net 
      
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: unless-stopped
    ports:
      - "1540:1540" # 1c # ragent (—Ç–æ–Ω–∫–∏–µ –∫–ª–∏–µ–Ω—Ç—ã) —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è —Ç–æ–Ω–∫–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
      - "1541:1541" # 1c # rmngr/rphost
      - "1545:1545" # 1c # ras (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ)
      - "1555:1555" # 1c # ras (–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥) 
      - "${ONEC_PORT_RANGE_DOCKER}:${ONEC_PORT_RANGE_DOCKER}" #  1—Å –†–∞–±–æ—á–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã(session) (100—à—Ç.)
      - "80:80" # Apache –≤–Ω—É—Ç—Ä–∏ server —Ç–µ–ø–µ—Ä—å –æ—Ç–¥–∞—ë—Ç Web-–∫–ª–∏–µ–Ω—Ç
      - "443:443"
      - "8006:8006" #proxmox web –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≥–ª–∞–≤–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ 
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥
      - ./nginx/templates/:/etc/nginx/templates/  # —à–∞–±–ª–æ–Ω—ã
      - ./nginx/conf.d/:/etc/nginx/conf.d/        # –∫–æ–Ω—Ñ–∏–≥–∏ –¥–ª—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö —Ö–æ—Å—Ç–æ–≤
      - ./nginx/stream.d/:/etc/nginx/stream.d/    # –∫–æ–Ω—Ñ–∏–≥–∏ –¥–ª—è stream
      - ./nginx/certbot/conf:/etc/letsencrypt   # ‚Üê —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã    
      - ./nginx/certbot/www:/var/www/certbot
    environment:
      - IP_VM_1C=server
      - DOMAIN=${DOMAIN}
      - PROXMOX_IP=${PROXMOX_IP}
      - PROXMOX_PORT=${PROXMOX_PORT}
      - DOMAIN_VNC_SERVER=${DOMAIN_VNC_SERVER}
      - DOMAIN_VNC_HASPD=${DOMAIN_VNC_HASPD}
    networks:
      - public # –î–ª—è —Å–≤—è–∑–∏ —Å –≤–Ω–µ—à–Ω–∏–º –º–∏—Ä–æ–º
      - private # –î–ª—è —Å–≤—è–∑–∏ —Å server 
      - vnc-net 
    depends_on:
      - novnc-server
      - novnc-haspd
      
  certbot:
    build:
      context: ./certbot
      dockerfile: Dockerfile
    container_name: certbot
    secrets:
      - cloudflare
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt 
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - CLOUD_FLARE=/run/secrets/cloudflare.ini
      - CERTBOT_EMAIL=${CERTBOT_EMAIL}
      - DOMAIN=${DOMAIN}
      - DOMAIN_VNC_SERVER=${DOMAIN_VNC_SERVER}
      - DOMAIN_VNC_HASPD=${DOMAIN_VNC_HASPD}
    restart: unless-stopped
    
networks:
  internal_pgsql:
    internal: true  # –°–∫—Ä—ã—Ç–∞—è —Å–µ—Ç—å (1C <-> PostgreSQL) 
  public:
    driver: bridge  # –û–±—ã—á–Ω–∞—è —Å–µ—Ç—å –¥–ª—è nginx 
  private:
    internal: true  
  vnc-net:
    driver: bridge  
volumes:
  pg-data-1c: #postgres —Ö—Ä–∞–Ω–∏—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö 
  1c-data: #1—Å —Ö—Ä–∞–Ω–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞—Å—Ç–µ—Ä–∞—Ö 
  1c-user-home: #–û–±—â–∞—è –ø–∞–ø–∫–∞ –¥–ª—è –∫–µ—à–∞ –∏ –µ—â–µ —á–µ–≥–æ-—Ç–æ
  hasplm-data: # hasplm - –≠—Ç–æ —Å–ª—É–∂–±–∞ –æ—Ç Guardant / SafeNet, –∫–æ—Ç–æ—Ä–∞—è –Ω—É–∂–Ω–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã HASP. 1–° –∏—Å–ø–æ–ª—å–∑—É–µ—Ç HASP (–ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä) 
  
secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt
  vnc_server_pass:  
    file: ./secrets/vnc_server_pass.txt
  vnc_haspd_pass:  
    file: ./secrets/vnc_haspd_pass.txt
  cloudflare:  
    file: ./secrets/cloudflare.ini
